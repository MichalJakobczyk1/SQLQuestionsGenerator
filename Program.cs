string[] questions = new string[]
{
    "Liczba studentów zarejestrowanych w bazie danych.\r\n35 studentów\r\n",
    "Liczba studentów, którzy są przypisani do jakiejś grupy.\r\n28 studentów\r\n",
    "Liczba studentów, którzy nie są przypisani do żadnej grupy.\r\n7 studentów\r\n",
    "Liczba grup, do których jest przypisany co najmniej jeden student.\r\n12 grup\r\n",
    "Nazwy grup, do których zapisany jest przynajmniej jeden student wraz z liczbą studentów zapisanych do każdej grupy. Kolumna zwracająca liczbę studentów ma mieć nazwę no_of_students. Dane posortowane rosnąco według liczby studentów.\r\n12 rekordów\r\nw pięciu grupach jest po jednym studencie, w czterech po dwóch,\r\nw jednej czterech i w jednej pięciu\r\n",
    "Nazwy grup, do których zapisanych jest przynajmniej trzech studentów wraz z liczbą tych studentów. Kolumna zwracająca liczbę studentów ma mieć nazwę no_of_students. Dane posortowane rosnąco według liczby studentów.\r\n3 rekordy\r\n",
    "Wszystkie możliwe oceny oraz ile razy każda z ocen została przyznana (kolumna ma mieć nazwę no_of_grades). Dane posortowane według ocen.\r\n8 rekordów.\r\nOcena 2.0 została przyznane 13 razy.\r\nOcena 5.5 4 razy.\r\nOcena 6.0 nie została przyznana ani raz.\r\n",
    "Nazwy wszystkich katedr oraz ile godzin wykładów w sumie mają pracownicy zatrudnieni w  tych katedrach. Kolumna zwracająca liczbę godzin ma mieć nazwę total_hours. Dane posortowane rosnąco według kolumny total_hours.\r\n11 rekordów\r\nDla pierwszych sześciu total_hours jest NULL\r\nOstatni rekord: Department of Informatics, 117 godzin\r\n",
    "Nazwisko każdego wykładowcy wraz z liczbą prowadzonych przez niego wykładów. Kolumna zawierająca liczbę wykładów ma mieć nazwę no_of_modules. Dane posortowane malejąco według nazwiska.\r\n28 rekordów.\r\nPierwszy: Wright, nie prowadzi żadnego wykładu.\r\nTrzeci: White, prowadzi jeden wykład.\r\n",
    "Nazwiska i imiona wykładowców prowadzących co najmniej dwa wykłady wraz z liczbą prowadzonych przez nich wykładów. Dane posortowane malejąco według liczby wykładów a następnie rosnąco według nazwiska.\r\n6 rekordów.\r\nPierwszy: Harry Jones, 4 wykłady\r\nOstatni: Lily Taylor, 2 wykłady\r\n",
    "Nazwiska i imiona wszystkich studentów o nazwisku Bowen, którzy otrzymali przynajmniej jedną ocenę wraz ze średnią ocen (każdego Bowena z osobna). Kolumna zwracająca średnią ma mieć nazwę avg_grade. Dane posortowane malejąco według nazwisk i malejąco według imion.\r\nDwa rekordy: \r\nHarry Bowen, średnia 3.7\r\nCharlie Bowen, średnia 2.0\r\n",
    "Nazwiska i imiona wykładowców, którzy prowadzą co najmniej jeden wykład wraz ze średnią ocen jakie dali studentom (jeśli wykładowca nie dał do tej pory żadnej oceny, także ma się pojawić na liście). Kolumna zwracająca średnią ma mieć nazwę avg_grade. Dane posortowane malejąco według średniej.\r\n11 rekordów. Pierwszy rekord: James Robinson, średnia 5.0.\r\nJeden wykładowca nie wystawił żadnej oceny.\r\n",
    "Nazwy wykładów oraz kwotę, jaką uczelnia musi przygotować na wypłaty pracownikom prowadzącym wykłady ze Statistics i Economics (osobno). Jeśli jest wiele wykładów o nazwie Statistics lub Economics, suma dla nich ma być obliczona łącznie. Zapytanie ma więc zwrócić dwa rekordy (jeden dla wykładów ze Statistics, drugi dla Economics).\r\nKwotę za jeden wykład należy obliczyć jako iloczyn stawki godzinowej prowadzącego wykładowcy oraz liczby godzin przeznaczonych na wykład.\r\nZapytanie zwraca jeden rekord: Economics 1200.00\r\nOdpowiedz na pytanie, dlaczego zapytanie nie zwróciło danych o wykładzie Statistics.\r\n",
    "Sumaryczną kwotę, jaką uczelnia musi wypłacić wykładowcom łącznie z tytułu prowadzenia przez nich wykładów.\r\n20265.00\r\nCzy zapytanie zwróciło pełną kwotę, jaką uczelnia musi wypłacić z tytułu prowadzenia wykładów?\r\n",
    "Kwotę, jaką uczelnia musi przygotować na wypłaty z tytułu prowadzenia wykładów, którym nie jest przypisany żaden wykładowca, przy założeniu, że za godzinę takiego wykładu należy zapłacić średnią z pola overtime_rate w tabeli acad_positions.\r\nWskazówka: użyj następującej składni.\r\nSELECT\r\n(zapytanie obliczające sumę godzin wykładów, które w polu lecturer_id mają NULL)\r\n*\r\n(zapytanie obliczające średnią z wartości w polu overtime_rate w tabeli acad_positions)\r\n7649.99\r\n",
    "Kwotę, jaką uczelnia musi przygotować na wypłaty z tytułu prowadzenia wszystkich wykładów, za które nie można ustalić stawki godzinowej. Przyjmij założenie, że za godzinę takiego wykładu należy zapłacić maksymalną wartość z pola overtime_rate w tabeli acad_positions.\r\nUWAGA:\r\nNie można ustalić kwoty wynagrodzenia za wykłady, które nie mają przypisanego wykładowcy (lecturer_id w tabeli modules jest Null) oraz takie, które mają ustalonego wykładowcę, ale wykładowca ten nie ma przypisanego stopnia/tytułu naukowego (acad_position w tabeli lecturers jest Null).\r\n13200\r\n",
    "Nazwiska i imiona wykładowców wraz z sumaryczną liczbą godzin wykładów prowadzonych przez każdego z nich z osobna ale tylko w przypadku, gdy suma godzin prowadzonych wykładów jest większa od 30. Kolumna zwracająca liczbę godzin ma mieć nazwę no_of_hours. Dane posortowane malejąco według liczby godzin.\r\n5 rekordów. \r\nPierwszy: Jones Harry, 72 godziny.\r\nOstatni: Katie Davies 55 godzin.\r\n",
    "Nazwy wszystkich grup oraz liczbę studentów zapisanych do każdej grupy (kolumna ma mieć nazwę no_of_students). Dane posortowane rosnąco według liczby studentów a następnie numeru grupy.\r\n23 rekordy.\r\nDo 11 grup nie został zapisany żaden student.\r\nOstatni rekord: grupa DMIe1011, 6 studentów\r\n",
    "Nazwy wszystkich wykładów, których nazwa zaczyna się literą A oraz średnią ocen ze wszystkich tych wykładów osobno (jeśli jest wiele takich wykładów, to średnia ma być obliczona dla każdego z nich oddzielnie). Jeśli z danego wykładu nie ma żadnej oceny, także powinien on pojawić się na liście. Kolumna ma mieć nazwę average.\r\n3 rekordy:\r\nAdvanced databases NULL\r\nAdvanced statistics 4.25\r\nAncient history 4.25\r\n",
    "Nazwy grup, do których jest zapisanych co najmniej dwóch studentów, liczba studentów zapisanych do tych grup (kolumna ma mieć nazwę no_of_students) oraz średnie ocen dla każdej grupy (kolumna ma mieć nazwę average_grade). Dane posortowane malejąco według średniej.\r\n8 rekordów.\r\nPierwszy: ZMIe2012, liczba studentów 5, średnia 6.6\r\nOstatni: DMIe1014, liczba studentów 2, średnia 3.25\r\n",
    "Nazwy tych katedr (department), w których pracuje co najmniej 2 doktorów (doctor) wraz z liczbą doktorów pracujących w tych katedrach (ta ostatnia kolumna ma mieć nazwę no_of_doctors). Dane posortowane malejąco według liczby doktorów i rosnąco według nazw katedr.\r\n3 rekordy.\r\nDepartment of Informatics – trzech doktorów.\r\nDepartment of History i Departemt of Mathematics po dwóch doktorów.\r\n",
    "Identyfikatory, nazwy wykładów oraz nazwy katedr odpowiedzialnych za prowadzenie wykładów, dla których nie można ustalić kwoty, jaką trzeba zapłacić za ich przeprowadzenie wraz z nazwiskiem i imieniem dowolnego spośród pracowników tych katedr. \r\nDane posortowane według module_id.\r\nUWAGA: najpierw należy utworzyć pole wyliczane, które połączy nazwisko i imię w jedno pole. Pamiętaj, aby między nazwiskiem i imieniem wstawić spację. \r\nWskazówka:\r\nUżyj funkcji CONCAT\r\nCONCAT(poleNazwisko, ‘ ‘ , poleImię)\r\nlub operatora +. \r\npoleNazwisko + ‘ ‘ + poleImię\r\n6 rekordów. Wśród module_id są tylko identyfikatory 4, 7, 13, 15, 20, 22\r\n",
"Identyfikatory i nazwy wykładów na które nie został zapisany żaden student. Dane posortowane malejąco według nazw wykładów.\r\n4 rekordy, wykłady o identyfikatorach 26, 25, 24, 23 (w podanej kolejności)\r\n",
"Identyfikatory i nazwy wykładów oraz nazwiska wykładowców prowadzących wykłady, na które nie zapisał się żaden student.\r\n4 rekordy, wykłady o identyfikatorach 23, 24, 25, 26\r\n",
"Identyfikatory (pod nazwą lecturer_id) i nazwiska wszystkich wykładowców wraz z nazwami wykładów, które prowadzą. Dane posortowane rosnąco według nazwisk.\r\n37 rekordów, w pierwszych dwóch rekordach są wykładowcy o identyfikatorach 5 i 12\r\n",
"Identyfikatory, nazwiska i imiona pracowników, którzy są wykładowcami.\r\n28 rekordów\r\n",
"Identyfikatory, nazwiska i imiona pracowników, którzy nie są wykładowcami.\r\n14 rekordów\r\n",
"Identyfikatory, imiona, nazwiska i numery grup studentów, którzy nie są zapisani na żaden wykład. Dane posortowane rosnąco według nazwisk i imion.\r\n9 rekordów, ostatni: 13 Layla Owen NULL\r\n",
"Nazwiska, imiona i identyfikatory studentów, którzy przystąpili do egzaminu co najmniej raz oraz daty egzaminów. Jeśli student danego dnia przystąpił do wielu egzaminów, jego dane mają się pojawić tylko raz. Dane posortowane rosnąco względem dat.\r\n50 rekordów, ostatni: Cox Megan, 32, 2018-09-30\r\n",
"Nazwy wszystkich wykładów, liczby godzin przewidziane na każdy z nich oraz identyfikatory, nazwiska i imiona prowadzących. Dane posortowane rosnąco według nazw wykładów a następnie nazwisk i imion prowadzących.\r\n26 rekordów, ostatni: Windows server services, 15, 8, Evans Thomas\r\n",
"Identyfikatory, nazwiska i imiona studentów zapisanych na wykład z Statistics, posortowane rosnąco według nazwiska i imienia.\r\n4 studentów o identyfikatorach (w podanej kolejności) 32, 10, 12, 2\r\n",
"Nazwiska, imiona i stopnie/tytuły naukowe pracowników Department of Informatics. Dane posortowane rosnąco według nazwisk i imion.\r\n7 rekordów, pierwszy: Craven Lily doctor\r\n",
"Nazwiska i imiona wszystkich pracowników, a dla tych, którzy są wykładowcami także nazwy katedr. Dane posortowane rosnąco według nazwisk oraz malejąco według imion.\r\n42 rekordy, pierwszy: Brown John NULL\r\nOdpowiedz na pytanie: czy John Brown, dla którego nazwa katedry jest NULL jest wykładowcą, czy na podstawie otrzymanych danych nie jesteśmy w stanie tego stwierdzić?\r\nCzy w udzieleniu odpowiedzi na pytanie pomocny może być projekt logiczny (diagram) bazy danych?\r\n",
"Nazwiska i imiona wszystkich wykładowców wraz z nazwami katedr, w których pracują. Dane posortowane rosnąco według nazwisk oraz malejąco według imion.\r\n28 rekordów, pierwszy: Brown Jacob, Department of Economics\r\n",
"Identyfikatory, nazwiska, imiona i stopnie/tytuły naukowe wykładowców, którzy nie prowadzą żadnego wykładu. Dane posortowane malejąco według stopni naukowych.\r\n17 rekordów, pierwszy: 35, Jones Lily, master\r\n",
"Imiona i nazwiska wszystkich studentów, nazwy wykładów, na które są zapisani, nazwiska prowadzących te wykłady (pole ma mieć nazwę lecturer_surname) oraz nazwy katedr, w których każdy z wykładowców pracuje. Dane posortowane malejąco według nazw wykładów a następnie rosnąco według nazwisk wykładowców.\r\n103 rekordy, pierwszy: Mason Ben, Web applications, Jones, Department of History\r\n",
"Liczba godzin wykładów, dla których nie da się ustalić kwoty, jaką trzeba zapłacić za ich przeprowadzenie.\r\nWskazówka: weź pod uwagę fakt, że nie jesteśmy w stanie ustalić, ile uczelnia musi zapłacić za danych wykład w dwóch przypadkach:\r\n1. \tGdy w tabeli modules wartość w polu lecturer_id jest Null\r\n2. \tGdy w tabeli modules wartość w polu lecturer_id istnieje, ale w tabeli lecturers wykładowca prowadzący ten wykład nie ma wpisanego acad_position.\r\nWynikiem jest liczba 165\r\n",
"Identyfikatory, nazwy wykładów oraz nazwy katedr odpowiedzialnych za prowadzenie wykładów, dla których nie można ustalić kwoty, jaką trzeba zapłacić za ich przeprowadzenie.\r\n7 wykładów o identyfikatorach 4, 5, 7, 13, 15, 20, 22\r\n",
"Nazwy wszystkich wykładów, których nazwa zaczyna się od słowa computer (z uwzględnieniem wielkości liter – wszystkie litery małe) oraz liczbę godzin przewidzianych na każdy z tych wykładów, nazwiska prowadzących i nazwy katedr, w których pracują. Dane posortowane malejąco według nazwisk.\r\nWynikiem jest tabela pusta\r\n",
"Nazwy wszystkich wykładów, których nazwa zaczyna się od słowa Computer (z uwzględnieniem wielkości liter – pierwsza litera duża) oraz liczbę godzin przewidzianych na każdy z tych wykładów, nazwiska prowadzących i nazwy katedr, w których pracują. \r\nDane posortowane malejąco według nazwisk.\r\n4 rekordy: Computer networks, Computer network devices, Computer programming oraz Computer programming II \r\n",
"Identyfikatory i nazwiska studentów, którzy nie otrzymali dotychczas oceny z wykładów, na które się zapisali wraz z nazwami tych wykładów (dane każdego studenta mają się pojawić tyle razy z ilu wykładów nie otrzymali oceny). Dane posortowane rosnąco według identyfikatorów studentów.\r\n45 rekordów, np. student o identyfikatorze 2 nie ma ocen z 3 wykładów\r\n",
"Identyfikatory i nazwiska studentów, którzy otrzymali oceny z wykładów, na które się zapisali wraz z nazwami tych wykładów i otrzymanymi ocenami (dane każdego studenta mają się pojawić tyle razy z ilu wykładów nie otrzymali oceny). Dane posortowane rosnąco według identyfikatorów studentów i nazw wykładów a następnie malejąco według otrzymanych ocen.\r\n58 rekordów, pierwszy rekord: 1, Bowen, Computer network devices, 4.5\r\nstudent o identyfikatorze 2 (Palmer) ma 6 ocen,\r\n",
"W polu department tabeli modules przechowywana jest informacja, która katedra jest odpowiedzialna za prowadzenie każdego z wykładów.\r\nNapisz zapytanie, które zwróci nazwy wykładów, które są prowadzone przez wykładowcę, który nie jest pracownikiem katedry odpowiedzialnej za dany wykład.\r\n11 rekordów, np.:\r\nWykład z Web applications jest przypisany do Department of Informatics a prowadzi go pracownik Department of History.\r\nWykład z Management jest przypisany do Department of Management a prowadzi go pracownik Department of Informatics.\r\n",
"Nazwiska, imiona i PESELe wykładowców, którzy prowadzą przynajmniej jeden wykład wraz z nazwami prowadzonych przez nich wykładów i napisem „wykladowca” w ostatniej kolumnie \r\noraz \r\nnazwiska, imiona, numery grup wszystkich studentów wraz z nazwami wykładów na które się zapisali i napisem „student” w ostatniej kolumnie. \r\nTrzecia kolumna ma mieć nazwę pesel/grupa a ostatnia student/wykladowca.\r\nDane posortowane rosnąco według nazw wykładów a następnie według kolumny student/wykladowca.\r\n119 rekordów. Rekord nr 11: Chapman Grace DMZa3012 Advanced Statistics student\r\n",
"Identyfikatory i nazwy wykładów, na które nie został zapisany żaden student. Dane posortowane malejąco według nazw wykładów. \r\nUżyj składni podzapytania.\r\n4 rekordy, wykłady o identyfikatorach 26, 25, 24 i 23 (w podanej kolejności)\r\n",
"Identyfikatory studentów, którzy przystąpili do egzaminu zarówno 2018-03-22 jak i 2018 09 30. Dane posortowane malejąco według identyfikatorów. \r\nNapisz dwie wersje tego zapytania: raz używając składni podzapytania, drugi raz operatora INTERSECT.\r\nStudenci o identyfikatorach 18 i 2 (w podanej kolejności)\r\n",
"Identyfikatory, nazwiska, imiona i numery grup studentów, którzy zapisali się zarówno na wykład o identyfikatorze 2 jak i 4. Dane posortowane malejąco według nazwisk.\r\nUżyj składni podzapytania a w zapytaniu zewnętrznym także złączenia.\r\n3 rekordy, studenci o identyfikatorach 16, 3, 20 (w podanej kolejności)\r\n",
"Identyfikatory, nazwiska i imiona studentów, którzy zapisali się na wykład z matematyki (Mathematics) ale nie zapisali się na wykład ze statystyki (Statistics). \r\nZapytanie napisz korzystając ze składni podzapytania, według następującego algorytmu:\r\n•\tnajbardziej wewnętrznym zapytaniem wybierz identyfikatory studentów, którzy zapisali się na wykład ze statystyki (tu potrzebne będzie złączenie),\r\n•\tkolejnym zapytaniem wybierz identyfikatory studentów, którzy zapisali się na wykład z matematyki (także potrzebne będzie złączenie) oraz nie zapisali sią na wykład ze statystyki (ich identyfikatory nie należą do zbioru zwróconego przez poprzednie zapytanie),\r\n•\tzewnętrznym zapytaniem wybierz dane o studentach, których identyfikatory należą do zbioru zwróconego przez zapytanie środkowe.\r\n5 rekordów, studenci o identyfikatorach 3, 6, 16, 20, 33\r\n",
"Imiona, nazwiska i numery grup studentów z grup, których nazwa zaczyna się na DMIe i kończy cyfrą 1 i którzy nie są zapisani na wykład z „Ancient history”.\r\nUżyj składni zapytania negatywnego a w zapytaniu wewnętrznym także złączenia.\r\n3 rekordy (studenci z grupy DMIe1011 o nazwiskach Hunt, Holmes i Lancaster)\r\n",
"Nazwy wykładów o najmniejszej liczbie godzin. Zapytanie, oprócz nazw wykładów, ma zwrócić także liczbę godzin.\r\nUżyj operatora ALL.\r\nJeden wykład: Advanced Statistics, 9 godzin\r\n",
"Identyfikatory i nazwiska studentów, którzy otrzymali ocenę wyższą od najniższej. Dane każdego studenta mają się pojawić tyle razy, ile takich ocen otrzymał.\r\nUżyj operatora ANY. W zapytaniu nie wolno posługiwać się liczbami oznaczającymi oceny 2, 3, itd.) ani funkcjami agregującymi (MIN, MAX).\r\n45 rekordów\r\nSprawdź, czy liczba rekordów zwróconych przez zapytanie jest poprawna, wykonując odpowiednie zapytanie do tabeli student_grades (wybierające rekordy, w których ocena jest wyższa niż 2).\r\n",
"Napisz jedno zapytanie, które zwróci dane o najmłodszym i najstarszym studencie (do połączenia tych danych użyj jednego z operatorów typu SET). \r\nW zapytaniu nie wolno używać funkcji agregujących (MIN, MAX).\r\nUwaga: należy uwzględnić fakt, że data urodzenia w tabeli students może być NULL, do porównania należy więc wybrać rekordy, które w polu date_of_birth mają wpisane daty.\r\nUżyj operatora ALL.\r\nNajstarszym studentem jest Melissa Hunt urodzona 1978-10-18\r\nNajmłodszym studentem jest Layla Owen urodzona 2001-06-20\r\nNapisz zapytanie do tabeli students i sprawdź, czy otrzymane dane o najmłodszych i najstarszych studentach są poprawne.\r\n",
"Identyfikatory, imiona i nazwiska studentów z grupy DMIe1011, którzy otrzymali oceny z egzaminu wcześniej, niż wszyscy pozostali studenci z innych grup (nie uwzględniamy studentów, którzy nie są zapisani do żadnej grupy). Dane każdego studenta mają się pojawić tylko raz.\r\nUżyj złączenia i operatora ALL.\r\n3 rekordy, studenci o identyfikatorach 1, 3 i 6\r\n",
"Jak wyżej, ale tym razem należy uwzględnić studentów, którzy nie są zapisani do żadnej grupy.\r\nWynikiem jest tabela pusta\r\nOdpowiedz na pytanie, jaki jest identyfikator studenta, którego ocena spowodowała, że wynikiem jest tabela pusta?\r\n",
"Nazwy wykładów, którym przypisano największą liczbę godzin (wraz z liczbą godzin).\r\nWyko¬rzystaj składnię podzapytania z operatorem =. W zapytaniu wewnętrznym użyj funkcji MAX.\r\nJeden rekord: Econometrics, 45 godzin\r\n",
"Nazwy wykładów, którym przypisano liczbę godzin większą od najmniejszej. \r\nUżyj funkcji MIN i składni podzapytania z operatorem >.\r\n25 rekordów\r\n",
"Wszystkie dane o najstarszym studencie z każdej grupy. \r\nUżyj fujnkcji MIN i składni podzapytania skorelowanego z operatorem =.\r\n11 rekordów, np. w grupie DMIe1013 najstarszy jest Elliot Fisher, ur. 1998-07-19\r\n",
"Wszystkie numery grup z tabeli students posortowane według numerów grup. Każda grupa ma się pojawić jeden raz.\r\nZapytanie zwróciło 13 rekordów. Ponieważ jedną z wartości jest NULL, więc studenci są przypisani do 12 różnych grup. Poprzednie zapytanie, zwracające dane o najmłodszym studencie z każdej grupy, zwróciło 11 rekordów. Znajdź przyczynę tej różnicy.\r\n",
"Identyfikatory, nazwiska i imiona studentów, którzy otrzymali ocenę 5.0. Nazwisko każdego studenta ma się pojawić jeden raz. \r\nUżyj operatora EXISTS.\r\n6 studentów o identyfikatorach 1, 2, 14, 18, 19, 21\r\nNapisz zapytanie:\r\nSELECT * FROM student_grades where grade=5\r\ni sprawdź otrzymany wynik.\r\n",
"Wszystkie dane o wykładach, w których uczestnictwo wymaga wcześniejszego uczestnictwa w wykładzie o identyfikatorze 3. \r\nUżyj operatora EXISTS.\r\nTrzy wykłady o identyfikatorach 10, 16 i 25\r\nAby sprawdzić otrzymany wynik napisz zapytanie:\r\nSELECT module_id\r\nFROM modules\r\nWHERE preceding_module=3 \r\n",
"Nazwy wykładów, w których uczestnictwo wymaga wcześniejszego uczestnictwa w wykładzie z matematyki (Mathematics). \r\nUżyj operatora EXISTS.\r\nWskazówka: id. wykładu z matematyki znajdź przy pomocy odpowiedniego zapytania.\r\nDwa wykłady: Statistics i Mathematics II\r\n",
"Dane studentów z grupy DMIe1011 wraz z najwcześniejszą datą planowanego dla nich egzaminu (pole planned_exam_date w tabeli students_modules). Zapytanie nie zwraca danych o studentach, którzy nie mają wyznaczonej takiej daty. Sortowanie rosnące według planned_exam_date a następnie student_id.\r\nUżyj operatora APPLY.\r\nUwaga: należy uwzględnić fakt, że data planowanego egzaminu może być NULL.\r\n3 rekordy, studenci o identyfikatorach 3, 29 i 1 (w takiej kolejności)\r\nNajwcześniejsza planned_exam_date dla studenta o id=3 to 2018-03-21\r\n",
"Jak wyżej, tylko zapytanie ma zwrócić najpóźniejszą datę planowanego egzaminu. Ponadto zapytanie ma także zwrócić dane o studentach, którzy nie mają wyznaczonej takiej daty. Sortowanie rosnące według planned_exam_date.\r\nUżyj operatora APPLY.\r\n6 rekordów, studenci o identyfikatorach 4, 6, 30 (dla których planned_exam_date jest NULL)\r\n\toraz 29, 3 i 1 (z istniejącą planned_exam_date).\r\nNajwcześniejsza planned_exam_date dla studenta o id=3 to 2018-10-13\r\n",
"Identyfikatory i nazwiska studentów oraz dwie najlepsze oceny dla każdego studenta wraz z datami ich przyznania. Zapytanie uwzględnia tylko studentów, którym została przyznana co najmniej jedna ocena.\r\nUżyj operatora APPLY.\r\n37 rekordów.\r\nOstatni rekord: 33, Bowen, 2.0, 2018-09-23\r\nNp. w przypadku studentów o id=1, 2 i 3 zwrócone zostały po dwie oceny.\r\nW przypadku studenta o id=4 jedna ocena.\r\nStudent o id=5 nie otrzymał żadnej oceny.\r\n",
"Identyfikatory i nazwiska studentów oraz dwie najgorsze oceny dla każdego studenta wraz z datami ich przyznania. Zapytanie uwzględnia także studentów, którym nie została przyznana żadna ocena.\r\nUżyj operatora APPLY.\r\n51 rekordów.\r\nPierwszy: 1, Bowen, 2.0, 2018-03-22\r\nOstatni: 35, Fisher, NULL, NULL\r\nW kilku przypadkach (np. studenci o id: 5, 11, 13, 16) studenci nie otrzymali żadnej oceny.\r\n",
"Identyfikatory i nazwiska studentów oraz kwoty dwóch ostatnich wpłat za studia wraz z datami tych wpłat. Zapytanie uwzględnia także studentów, którzy nie dokonali żadnej wpłaty.\r\nUżyj operatora APPLY.\r\n54 rekordy.\r\nTrzeci: 2, Palmer, 450.00, 2018-10-30\r\nW kilku przypadkach (np. studenci o id: 9, 10, 20) studenci nie dokonali żadnej wpłaty.\r\n",
"Nazwę modułu poprzedzającego dla modułu Databases.\r\nInformation technology\r\n",
"Widok (view) i funkcja (function)\r\nNazwiska i imiona studentów zapisanych na wykład z matematyki (Mathematics). Dane posortowane według nazwisk. Użyj składni podzapytania.\r\n6 rekordów.\r\nStudenci o nazwiskach (kolejno): Bowen, Foster, Holmes, Hunt, Palmer, Powell\r\n",
"Widok (view) i funkcja (function)\r\nNapisz funkcję o nazwie studmod_f, która zwróci nazwiska i imiona studentów zapisanych na wykład o nazwie przekazanej do funkcji przy pomocy parametru. Uruchom funkcję podając jako parametr nazwę wybranego wykładu.\r\nSELECT * FROM studmod_f('Mathematics') zwraca 6 rekordów (jak powyższe zapytanie)\r\nSELECT * FROM studmod_f('Statistics') zwraca 4 rekordy\r\nSELECT * FROM studmod_f('Databases') zwraca 2 rekordy\r\n",
"Widok (view) i funkcja (function)\r\nJedną z różnic między funkcją a widokiem jest to, że do funkcji można przekazać parametr a do widoku nie. Aby przekazać parametr do widoku, można jednak użyć context info lub session context.\r\nUtwórz widok o nazwie studmod_v, który zwróci nazwiska i imiona studentów zapisanych na wykład o nazwie przekazanej do widoku przy pomocy session context. Wykorzystaj mechanizm session context do przekazania nazwy wykładu do widoku i uruchom widok.\r\n",
"Wszystkie dane z tabeli student_grades, w ramach każdego module_id (partition by) posortowane według daty egzaminu a następnie identyfikatora studenta oraz ponumerowane kolejnymi liczbami. Pole zawierające kolejny numer oceny w ramach każdego module_id ma mieć nazwę sequence_num.\r\n58 rekordów, \r\npierwsze trzy dotyczą wykładu o id=1 (w kolumnie sequence_num są liczby 1, 2, 3)\r\nkolejnych pięć dotyczy wykładu o id=2 (w kolumnie sequence_num są liczby 1-5), itd.\r\n",
"Funkcja ROW_NUMBER()\r\nWszystkie dane z tabeli student_grades, w ramach każdego student_id posortowane według daty egzaminu oraz ponumerowane kolejnymi liczbami. Zapytanie ma zwrócić jedynie dane o ocenach pozytywnych (większych niż 2). Pole zawierające kolejny numer oceny w ramach każdego student_id ma mieć nazwę sequence_num.\r\n45 rekordów \r\npierwsze cztery dotyczą studenta o id=1 (w kolumnie sequence_num są liczby 1-4)\r\nkolejne cztery dotyczą studenta o id=2 (w kolumnie sequence_num są liczby 1-4), itd.\r\n",
"Funkcja ROW_NUMBER()\r\nIdentyfikatory i nazwiska studentów oraz daty egzaminów, w ramach każdego student_id posortowane według daty egzaminu oraz ponumerowane kolejnymi liczbami. Zapytanie ma zwrócić jedynie dane o ocenach negatywnych (równych 2). Pole zawierające kolejny numer oceny w ramach każdego student_id ma mieć nazwę sequence_num.\r\n13 rekordów\r\nstudenci o identyfikatorach 2, 3 i 12 mają po dwie oceny 2,0\r\nstudenci o identyfikatorach 1, 6, 7, 8, 10, 20 i 33 po jednej\r\n",
"Funkcja ROW_NUMBER()\r\nWszystkie dane z tabeli students, grupami. W ramach każdej grupy dane posortowane według daty urodzenia studenta. W ramach każdej grupy rekordy mają być ponumerowane.\r\n35 rekordów.\r\nZauważ, że w pierwszych 7 rekordach group_no jest NULL i rekordy te są traktowane jako jedna partycja.\r\nW grupie DMIe1011 jest 6 studentów (data urodzenia pierwszego jest NULL).\r\nW grupie DMIE1014 jest jeden student.\r\nData urodzenia pierwszego studenta w grupie ZMIe2011 to 1990-01-30 (Melissa Hunt).\r\nW ostatnich dwóch rekordach w polu zawierającym kolejny numer w danej grupie są wartości 5 (w przedostatnim rekordzie) i 1 (w ostatnim).\r\n",
"Identyfikator, nazwisko i datę ostatniego egzaminu dla każdego studenta. Zapytanie ma zwrócić jedynie dane o studentach, którzy przystąpili co najmniej do jednego egzaminu.\r\nNapisz zapytanie w dwóch wersjach: raz używając składni derived tables, raz CTE.\r\n21 rekordów\r\nTrzeci: 3, Hunt, 2018-09-20\r\nOstatni: 33, Bowen, 2018-09-23\r\n",
"Korzystając z poprzedniego zapytania utwórz widok (VIEW) o nazwie last_exam zwracający identyfikator, nazwisko i datę ostatniego egzaminu dla każdego studenta.\r\nUruchom widok i sprawdź poprawność jego działania.\r\nWskazówka: Aby utworzyć widok, należy zapytanie poprzedzić instrukcją CREATE VIEW.\r\nUwaga: Widok nie może mieć takiej samej nazwy jak inny obiekt w bazie danych (tabela, funkcja).\r\nSELECT * FROM last_exam\r\nzwraca te same dane, co powyższe zapytanie.\r\n",
"Zmodyfikuj utworzony widok o nazwie last_exam, aby wywołując go instrukcją SELECT można było podać liczbę oznaczającą, ile rekordów z danymi o ostatnich egzaminach ma zostać zwróconych dla każdego studenta.\r\nWskazówka: widok powinien zwracać dane o wszystkich egzaminach dla każdego studenta, dzięki czemu zapytanie uruchamiające widok może zawierać klauzulę WHERE zawierającą warunek wskazujący, ile ostatnich egzaminów dla każdego studenta ma zostać zwróconych.\r\nSELECT * FROM last_exam\r\nWHERE rownum=1\r\nzwraca 21 rekordów\r\nSELECT * FROM last_exam\r\nWHERE rownum<=3\r\nzwraca 46 rekordów\r\n",
"Korzystając z poprzedniego zapytania utwórz funkcję o nazwie last_exams zwracającą identyfikator, nazwisko i datę tylu ostatnich egzaminów każdego studenta, ile wynosi wartość parametru funkcji (np. jeśli jako parametr funkcji podana zostanie liczba 4, to funkcja ma zwrócić daty ostatnich 4 egzaminów każdego studenta).\r\nUruchom funkcję i sprawdź poprawność jej działania.\r\nSELECT * FROM last_exams(1)\r\nzwraca 21 rekordów\r\nSELECT * FROM last_exams(2)\r\nzwraca 37 rekordów\r\nSELECT * FROM last_exams(4)\r\nzwraca 52 rekordy\r\n",
"Wszystkie dane o dwóch najmłodszych studentach w każdej grupie. W zapytaniu pomiń dane o studentach, którzy nie są przypisani do żadnej grupy oraz o tych, którzy nie mają przypisanej daty urodzenia.\r\nNapisz zapytanie w dwóch wersjach: raz używając składni derived tables, raz CTE.\r\n17 rekordów.\r\nW grupach DMIe1014, DMZa3013, DZZa3001, ZMIe2014 oraz ZZIe2003 tylko jeden student ma wpisaną datę urodzenia.\r\n6 rekord: Rebecca Mason z grupy DMZa3012, ur. 1988-12-10\r\n15 rekord: Katie Powell z grupy ZZIe2012, ur. 2001-01-20\r\n",
"Korzystając z poprzedniego zapytania napisz funkcję o nazwie youngest_students, która zwróci dane o tylu najmłodszych studentach, ile wskazuje pierwszy parametr funkcji, z grupy, której nazwa zostanie podana jako drugi parametr.\r\nUruchom funkcję (wykorzystaj instrukcję SELECT) i sprawdź poprawność jej działania.\r\nWywołanie funkcji:\r\nSELECT * FROM youngest_students(4, 'DMIe1011')\r\nZwraca 4 rekordy, w kolejności studentów o id: 1, 29, 30, 6\r\nWywołanie funkcji:\r\nSELECT * FROM youngest_students(3, 'ZMIe2012')\r\nZwraca tabele pustą\r\nWywołanie funkcji:\r\nSELECT * FROM youngest_students(5, 'DZZa3001')\r\nZwraca jeden rekord, student o id=19\r\n",
"recursive CTE\r\nModule_id, module_name and no_of_hours wykładu o identyfikatorze 9 wraz z łańcuchem poprzedzających wykładów. Kolumnę zawierającą kolejny poziom nazwij distance.\r\n4 rekordy, kolejno: \r\n9 Econometrics 45 (distance 0)\r\n8 Advanced Statistics 9 (1)\r\n5 Statistics 30 (2)\r\n4 Mathematics 15 (3)\r\n",
"Na podstawie powyższego zapytania napisz funkcję o nazwie preceding_modules zwracającą module_id, module_no oraz no_of_hours wykładu o identyfikatorze podanym jako parametr funkcji wraz z łańcuchem poprzedzających wykładów.\r\nDla parametru 9 funkcja zwraca 4 rekordy (takie same jak powyższe zapytanie)\r\nDla parametru 5 funkcja zwraca 2 rekordy (kolejno wykłady o identyfikatorach 5 i 4)\r\nDla parametru 8 funkcja zwraca 3 rekordy (kolejno wykłady o identyfikatorach 8, 5, 4)\r\n",
"Nazwy katedr, w których pracuje co najmniej jeden wykładowca, tytuły naukowe występujące w ramach każdej katedry oraz informację o liczbie prowadzonych wykładów w ramach katedr i w katedrach przez każdą z grup wykładowców (według tytułu naukowego). W zapytaniu należy pominąć wykładowców, którzy nie prowadzą żadnego wykładu.\r\nUżyj grupowania ROLLUP.\r\n17 rekordów.\r\nZapytanie zwróciło 4 rekordy dla Department of History. Zinterpretuj informację znajdującą się w każdym rekordzie.\r\nZauważ, że w rekordach dotyczących Department of History dwie grupy mają w pierwszych dwóch kolumnach Department of History oraz NULL. Zinterpretuj ten fakt.\r\n",
"Używając funkcji GROUPING zmodyfikuj zapytanie tak, aby zwróciło informację, względem których pól jest wykonywane grupowanie.\r\n17 rekordów.\r\nW niektórych polach będących wynikiem działania funkcji GROUPING pojawiły się liczby 1, w niektórych 0 – zinterpretuj te wyniki.\r\nW ostatnim rekordzie, w polach będących wynikiem działania funkcji GROUPING są dwie jedynki – zinterpretuj informację znajdującą się w tym rekordzie.\r\n",
"Zmodyfikuj zapytanie wyświetlając informację o sposobie grupowania przy pomocy funkcji GROUPING_ID.\r\n17 rekordów.\r\nW pięciu rekordach w polu będącym wynikiem działania funkcji GROUPING_ID jest liczba 1, w jednym rekordzie jest liczba 3.\r\nW ostatnim rekordzie, w polu będącym wynikiem działania funkcji GROUPING_ID znajduje się liczba 3. Zinterpretuj tę informację.\r\n\r\nNapisz zapytanie zwracające liczbę rekordów znajdujących się w tabeli modules. Odpowiedz na pytanie, dlaczego liczba rekordów w tabeli modules (26) jest różna od liczby wykładów zwróconych w ostatnim rekordzie poprzedniego zapytania (20).\r\n",
"Numery grup, do których zapisany jest co najmniej jeden student, nazwy wszystkich wykładów, na które studenci są zapisani oraz informację o liczbie studentów w ramach każdej grupy oddzielnie zapisanych na poszczególne wykłady.\r\n96 rerkordów.\r\nPierwszy NULL NULL 0\r\nPrzedostatni: ZZIe2013 NULL 2\r\nOstatni: NULL NULL 94\r\nW pierwszych 16 rekordach w polu group_no znajduje się wartość NULL. Zinterpretuj tę informację.\r\n29 i 30 rekord są identyczne (DMIe1013 NULL 0) – zinterpretuj tę informację.\r\nW przypadku niektórych grup (np. DMIe1011 – rekord 17) na początku listy występuje numer grupy oraz, w polu module_name wartość NULL a w przypadku niektórych grup (np. DMZa3012) rekord z numerem grupy i wartością NULL na początku nie występuje – zinterpretuj jeden i drugi przypadek.\r\n",
"Nazwy stopni/tytułów naukowych, nazwy katedr oraz informację, ile godzin mają poszczególne grupy wykładowców (posiadających taki sam stopień/tytuł) w ramach każdej katedry. Użyj funkcji GROUPING_ID lub GROUPING.\r\n17 rekordów.\r\nassociate professors mają w sumie 115 godzin zajęć\r\ndoctors: 87\r\nfull professors: 68\r\nmasters: 129\r\nW pierwszych dwóch rekordach w polu acad_position jest NULL a w polu department w pierwszym rekordzie jest Department of History a w drugim NULL. Zinterpretuj tę informację.\r\n",
"Nazwy wszystkich katedr, w których pracuje co najmniej jeden wykładowca (w pierwszej kolumnie), trzy tytuły naukowe: doctor, master, full professor (w pierwszym wierszu) oraz liczbę godzin zajęć prowadzonych w ramach każdej katedry przez każdą z tych trzech grup pracowników. Użyj składni CTE.\r\n8 rekordów.\r\nW Department of Economics tylko pracownicy master prowadzą zajęcia (60 godzin)\r\nW Department of Informatics doctors mają 15 godzin, masters 12 a full professors 30\r\n",
"Nazwy wszystkich stopni/tytułów naukowych przypisanych co najmniej jednemu wykładowcy (w pierwszej kolumnie), trzy katedry: Department of History, Department of Informatics oraz Department of Statistics (w pierwszym wierszu) oraz liczbę wykładów prowadzonych przez poszczególne grupy pracowników w ramach tych trzech katedr.\r\n5 rekordów.\r\nW pierwszym rekordzie: NULL, 1, 0, 0\r\nW ostatnim rekordzie: master, 0, 1, 3\r\nZinterpretuj fakt, że w pierwszym rekordzie jako acad_position jest NULL.\r\n",
"Identyfikatory studentów, którzy dokonywali wpłat za studia w ostatnim kwartale 2018 roku (w pierwszej kolumnie), nazwy miesięcy ostatniego kwartału: October, November, December (w pierwszym wierszu) oraz sumę wpłat dokonanych przez poszczególnych studentów w poszczególnych miesiącach. Aby otrzymać nazwy miesięcy użyj funkcji DATENAME.\r\n23 rekordy.\r\nStudent o id=2 wpłacał tylko w październiku (450)\r\nStudent o id=16 wpłacił: w październiku 2800, w listopadzie 1980, w grudniu 890\r\n",
"Wszystkie oceny przyznane co najmniej raz (w pierwszej kolumnie), nazwy trzech wykładów: Management, Statistics i Economics (w pierwszym wierszu) oraz informację, ile razy każda z ocen została przyznana z poszczególnych wykładów.\r\n7 rekordów.\r\nOcena 2.0 została przyznana 2 razy (tylko z Economics).\r\nOcena 3.0 została przyznana 2 razy (raz z Management, raz ze Statistics)\r\nZapytanie miało zwrócić oceny przyznane co najmniej raz. Tymczasem w trzech ostatnich rekordach (oceny 4.5, 5, 5.5) jest informacja, że oceny te nie zostały przyznane. Zinterpretuj tę informację.\r\n",
"Wszystkie oceny przyznane co najmniej raz (w pierwszej kolumnie), nazwy wszystkich wykładów (w pierwszym wierszu) oraz informację, ile razy każda z ocen została przyznana z każdego z wykładów. Wykorzystaj operator PIVOT i składnię Derived tables.\r\n7 rekordów.\r\n27 kolumn (w pierwszej kolumnie oceny, w kolejnych 26ciu nazwy wykładów).\r\nW kilku przypadkach z przedmiotu nie została przyznana żadna ocena \r\n(np. Advanced databases, Macroeconomics, Web applications).\r\n",
"Informację o liczbie pracowników zatrudnionych w poszczególnych miesiącach (niezależnie od roku). W pierwszym wierszu mają się pojawić nazwy miesięcy, w drugim liczba zatrudnionych w każdym z nich. Należy wykluczyć miesiące, w których żaden pracownik nie był zatrudniony. Zapytanie ma wyświetlić informację o liczbie pracowników, dla których data zatrudnienia jest nieznana (pod nazwą Unknown).",
"Kwotę wpłat studentów w poszczególnych miesiącach 2019 roku."};

static void ClearCurrentConsoleLine()
{
    int currentLineCursor = Console.CursorTop;
    Console.SetCursorPosition(0, Console.CursorTop);
    Console.Write(new string(' ', Console.WindowWidth));
    Console.SetCursorPosition(0, currentLineCursor);
}

for (int i = 0; i < 4; i++)
{
    Console.WriteLine(i+1 + ".");
    Random r = new Random();
    int rInt = r.Next(0, questions.Length);
    Console.WriteLine(questions[rInt]);
}

var mins = 15;
Console.ForegroundColor = ConsoleColor.White;
Console.CursorVisible = false;
var d = new DateTime(2000, 1, 1, 0, mins, 0);

for (int i = 0; i <= mins * 60; i++)
{
    Console.Write(d.ToString("mm:ss"));
    d = d.AddSeconds(-1);
    System.Threading.Thread.Sleep(1000);
    Console.WriteLine();
    Console.SetCursorPosition(0, Console.CursorTop - 1);
    ClearCurrentConsoleLine();
}